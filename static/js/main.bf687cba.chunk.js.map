{"version":3,"sources":["TodoCreateForm.js","InputEditWindow.js","ButtonToDelete.js","TodoList.js","App.js","serviceWorker.js","index.js"],"names":["Title","styled","h3","TodoCreateForm","props","useState","inputValue","setInputValue","className","type","value","onChange","e","target","onClick","ChangeList","listLength","ShowInput","Button","event","Change","Create","changeButton","InputEditWindow","setButton","SetInput","checkEvent","ChangeDeleteId","id","ButtonToDelete","progressButton","ChangeProgressBut","DoneUndoneBut","PlainStrikeText","title","ChangeIndex","Bool","index","changeIndex","ID","TaskList","div","Container","isDraggingOver","TodoList","list","map","el","key","uuid","draggableId","String","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","isDragging","length","color","initialList","done","App","setList","console","log","newItem","Math","random","UpdatedList","update","CopiedList","slice","Elem","undefined","i","splice","UpDown","topElem","botElem","onDragEnd","result","destination","document","body","style","backgroundColor","itemDestination","source","onDragStart","onDragUpdate","opacity","droppableId","droppableProps","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bf687cba.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport styled from 'styled-components'\n\n\nconst Title = styled.h3`\n    padding:8px;\n`\n\nfunction TodoCreateForm(props) {\n    const [inputValue, setInputValue] = useState()\n    const inputOnChange = e => {\n        setInputValue(e.target.value)\n\n    }\n    const onCreate = () => {\n        props.ChangeList(inputValue)\n        setInputValue(\"\")\n    }\n\n    return (\n        <center>\n            <div>\n\n                <Title>\n\n                    <p className=\"input-group\">\n                        <input type=\"text\" className=\" input-group-sm\" value={inputValue} onChange={inputOnChange}/>\n\n                        <button type=\"button\" className=\" btn-primary btn-sm\" onClick={onCreate}>\n                            Create <span className=\"badge badge-light\">{props.listLength}</span>\n                        </button>\n                    </p>\n\n                </Title>\n\n            </div>\n        </center>\n\n    );\n}\n\nexport default TodoCreateForm;\n","import React, {useState} from \"react\";\n\nconst ShowInput = (props) => {\n    if (props.Button) {\n        return (<p>\n            <input type=\"text\" className=\" input-group-sm\" onChange={(event) => props.Change(event)}/>\n            <button type=\"button\" className=\" btn-primary btn-sm\" onClick={(event) => props.Create(event)}>Save</button>\n\n        </p>);\n    } else {\n        return <button className=\"btn-primary btn-sm\" onClick={props.changeButton}>edit</button>\n    }\n    // eslint-disable-next-line no-unreachable\n\n\n}\n\n/* This is the separate component for a button component */\nfunction InputEditWindow(props) {\n    const [Button, setButton] = useState(false)\n    const [inputValue, SetInput] = useState()\n    const Change = (event) => {\n        SetInput(event.target.value)\n\n    }\n    const Create = () => {\n\n        props.ChangeDeleteId(props.id, \"change\", inputValue)\n        setButton(!Button)\n    }\n\n    const changeButton = () => {\n        setButton(!Button)\n    }\n\n    return (\n\n\n            <ShowInput Button={Button} checkEvent={Change} changeButton={changeButton} Create={Create} Change={Change}/>\n\n\n\n    )\n\n}\n\nexport default InputEditWindow\n","import React, {useState} from 'react';\nimport InputEditWindow from \"./InputEditWindow\";\n\n\nfunction ButtonToDelete(props) {\n    const [progressButton, setButton] = useState(true)\n\n\n    const DeleteID = (ID) => {\n        props.ChangeDeleteId(ID, \"delete\")\n    }\n    const ChangeProgressBut = () => {\n        setButton(!progressButton)\n    }\n\n\n    const DoneUndoneBut = (props) => {\n        if (props.progressButton) {\n            return (\n                <button className=\"btn-primary btn-sm\" onClick={ChangeProgressBut}>Done</button>\n            )\n        } else {\n            return (\n                <button className=\"btn-primary btn-sm\" onClick={ChangeProgressBut}>Undone</button>\n            )\n        }\n    }\n    const PlainStrikeText = (props) => {\n\n        if (props.progressButton) {\n            return (\n                <a>\n                    {props.title}\n                </a>\n            )\n        } else {\n            return (\n\n                <del>{props.title}</del>\n\n            )\n        }\n\n    }\n    const ChangeIndex = (Bool, index) => {\n        if (Bool) {\n            if (props.index > 0) {\n                props.changeIndex(props.index, true)\n            }\n        } else {\n            if (props.index < props.listLength - 1)\n                props.changeIndex(props.index, false)\n        }\n\n    }\n\n\n    return (\n        <div>\n            <ul>\n                <PlainStrikeText progressButton={progressButton} title={props.title}/>\n\n                <InputEditWindow id={props.id} ChangeDeleteId={props.ChangeDeleteId}/>\n\n                <DoneUndoneBut progressButton={progressButton}/>\n                <button className=\"btn-info btn-sm\" onClick={() => ChangeIndex(true, props.index)}>\n                    UP\n                </button>\n                <button className=\"btn-info btn-sm\" onClick={() => ChangeIndex(false, props.index)}>\n                    Down\n                </button>\n\n                <button className=\"btn-danger btn-sm\" onClick={() => DeleteID(props.id)}> Delete</button>\n\n            </ul>\n\n\n        </div>\n    );\n}\n\nexport default ButtonToDelete;\n","import React, {useState} from 'react';\nimport './App.css';\nimport ButtonToDelete from \"./ButtonToDelete\";\nimport styled from 'styled-components'\nimport {Draggable} from 'react-beautiful-dnd'\nimport uuid from \"uuid-v4\"\n\nconst TaskList = styled.div`\n    padding:8px;\n`;\nconst Container = styled.div`\n    border:1px solid lightgrey;\n    border-radius:2px;\n    padding:8px;\n    margin-bottom:8px;\n    background:${props =>(props.isDraggingOver?'lightgreen':'white')};\n`;\n\nfunction TodoList(props) {\n\n\n    return (\n        <div>\n\n            {props.list.map((el, index) =>\n                <Draggable key={uuid()} draggableId={String(el.id)} index={index}>\n                    {(provided, snapshot) => (\n                        <TaskList>\n                            <Container\n\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                ref={provided.innerRef}\n                                isDraggingOver={snapshot.isDragging}\n\n\n                            >\n                                <ButtonToDelete key={el.id} title={el.title}\n                                                id={el.id} index={index}\n                                                listLength={props.list.length}\n                                                ChangeDeleteId={props.ChangeDeleteId}\n                                                color={\"btn btn-info\"}\n                                                changeIndex={props.ChangeIndex}\n\n                                />\n\n                            </Container>\n                        </TaskList>\n                    )}\n                </Draggable>\n            )\n            }\n\n        </div>\n    );\n}\n\nexport default TodoList;\n","import React, {useState} from 'react';\nimport './App.css';\nimport TodoCreateForm from \"./TodoCreateForm\";\nimport TodoList from \"./TodoList\";\nimport styled from 'styled-components'\nimport {DragDropContext, Droppable} from \"react-beautiful-dnd\";\nimport uuid from \"uuid-v4\"\n\n\nconst Container = styled.div`\n    margin:8px;\n    border:3px solid lightgrey;\n    border-radius:2px;\n    transition:background-color 0.2 ease;\n    \n`;\n\n\n\nconst initialList = [\n    {id: 1, title: \"FirstToDo\", done: false},\n    {id: 2, title: \"SecondToDo\", done: false},\n    {id: 3, title: \"ThirdToDo\", done: false}]\n\nfunction App() {\n    const [list, setList] = useState(initialList)\n    const ChangeList = (title) => {\n        console.log(title)\n        const newItem = {\n            id: Math.random() * 10,\n            title: title,\n            done: false\n        }\n        const UpdatedList = [...list, newItem]\n        setList(UpdatedList)\n    }\n    const ChangeDeleteId = (ID, update, inputValue) => {\n        if (update === \"delete\") {\n            const CopiedList = list.slice()\n            let Elem = CopiedList.length !== 0 ? CopiedList[0] : undefined\n            if (Elem !== undefined) {\n                let i = 0;\n                while (Elem.id !== ID) {\n                    i = i + 1;\n                    Elem = CopiedList[i]\n                }\n                CopiedList.splice(i, 1)\n                setList(CopiedList)\n            }\n        }\n        if (update === \"change\") {\n            const CopiedList = list.slice()\n            console.log(ID)\n            console.log(inputValue)\n            let Elem = CopiedList.length !== 0 ? CopiedList[0] : undefined\n            if (Elem !== undefined) {\n                let i = 0;\n                while (Elem.id !== ID) {\n                    i = i + 1;\n                    Elem = CopiedList[i]\n                }\n                Elem.title = inputValue\n                setList(CopiedList)\n            }\n\n        }\n\n    }\n    const ChangeIndex = (index, UpDown) => {\n        const CopiedList = list.slice()\n        if (UpDown) {\n            const topElem = CopiedList[index - 1]\n            CopiedList[index - 1] = CopiedList[index]\n            CopiedList[index] = topElem\n        } else {\n            const botElem = CopiedList[index + 1]\n            CopiedList[index + 1] = CopiedList[index]\n            CopiedList[index] = botElem\n        }\n        setList(CopiedList)\n    }\n    const onDragEnd = (result) => {\n        if (!result.destination) {\n            return;\n        }\n        document.body.style.color = 'inherit';\n        document.body.style.backgroundColor ='inherit'\n        const CopiedList = list.slice()\n        const itemDestination = CopiedList[result.destination.index]\n        CopiedList[result.destination.index] = CopiedList[result.source.index]\n        CopiedList[result.source.index] = itemDestination\n        setList(CopiedList)\n\n\n    }\n    const onDragStart = () => {\n        document.body.style.color = 'orange';\n    }\n\n    const onDragUpdate = (update)=>{\n        const {destination} = update;\n        const opacity = destination ? (destination.index/list.length):0\n        document.body.style.backgroundColor=`rgba(153,141,217, ${opacity})`;\n\n    }\n\n    return (\n        <center>\n        <DragDropContext onDragEnd={onDragEnd} onDragStart={onDragStart} onDragUpdate={onDragUpdate}>\n            <div className=\"App\">\n\n                <Droppable droppableId=\"Droppable\" key={uuid}>\n                    {(provided, snapshot) => (\n\n                        <Container\n                            ref={provided.innerRef}\n                            style={{backgroundColor: snapshot.isDraggingOver ? 'skyblue' : 'white'}}\n                            {...provided.droppableProps}\n                        >\n                            <TodoCreateForm ChangeList={ChangeList} listLength={list.length}/>\n                            <TodoList list={list} ChangeDeleteId={ChangeDeleteId} ChangeIndex={ChangeIndex}/>\n                            {provided.placeholder}\n                        </Container>\n\n                    )}\n\n                </Droppable>\n            </div>\n        </DragDropContext>\n        </center>\n\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}